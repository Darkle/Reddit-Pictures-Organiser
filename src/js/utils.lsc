import {router} from './router.lsc'
import { store } from './store/store.lsc'

noop() -> return
identity(param) -> param
pipe(...fns) -> param -> fns.reduce((result, fn) -> fn(result), param)
compose(...fns) -> value -> fns.reduceRight((acc, current) -> current(acc), value)
curry(f) -> (...a) -> (...b) -> f(...a, ...b)
curryRight(f) -> (...a) -> (...b) -> f(...b, ...a)
range(start, end) -> Array.from({length: (end - start)}, (v, k) -> k + start)
// rangeIncEnd: includes end number - useful if you actually want the numbers in the range instead of just the index range
rangeIncEnd(start, end) -> Array.from({length: ((end - start) + 1)}, (v, k) -> k + start)

$$ = q => Array.from(document.querySelectorAll(q))
$ = document.querySelector.bind(document)

notOnSubredditPage = () => {
  {url} = router.lastRouteResolved()
  return !(url.startsWith('/sub/') && url.split('/').length === 3)
}

setPageTitle = (title) => {
  document.title = title // eslint-disable-line functional/immutable-data
}

noSubsStored = () => !store.favouriteSubreddits.length && !store.subreddits.length

export{
  noop,
  identity,
  pipe,
  compose,
  curry,
  curryRight,
  range,
  rangeIncEnd,
  $$,
  $,
  notOnSubredditPage,
  setPageTitle,
  noSubsStored,
}